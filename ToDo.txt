To-Do
-------------------
1. #include <sys/ipc.h>
   #include <sys/shm.h>
   #include <sys/mmap.h>
   #include <pthread.h>
   #include <semaphore.h>
   #include <sys/mman.h>
   #include <sys/types.h>
   #include <fcntl.h>

   http://csweb.cs.wfu.edu/~torgerse/Kokua/More_SGI/007-2478-008/sgi_html/ch03.html
   http://csweb.cs.wfu.edu/~torgerse/Kokua/More_SGI/007-2478-008/sgi_html/ch01.html#id54272
   https://www.geeksforgeeks.org/use-posix-semaphores-c/
   https://stackoverflow.com/questions/5656530/how-to-use-shared-memory-with-linux-in-c

-------------------
2. Consultas para el profe.
 Que espera con que el finalizador describa cada accion realizada y las estadisticas de su gestion.
-------------------
3. Quitar el segundo puntero del strtod
double strtodouble(char* value){
  char * eptr;
  double result;

  result = strtod(value, &eptr);
  return result;
}
-------------------
4. Obtener tiempo total de ejecuci√≥n del programa (en microsegundos)

#include <sys/time.h>

struct timeval finishTime, startTime;

gettimeofday(&startTime, NULL);
//execute program
gettimeofday(&finishTime, NULL);

+ Execution time: (double)(finishtTime - startTime)/1000000
+ Waiting time:   (double) total_waiting_time/1000000
+ Working time:   (double) executionTime - Waiting time

finisher: closing time //tiempo que espera mientras se cierran los productores y consumidores

Manejarlo desde struct
-------------------
5. Los productores y consumidores se pueden cerrar por diversos motivos.
Ambos se cierran, cuando se ejecuta el finalizador o por una interrupcion que termine el proceso (Cuando se usa ctrl+c para cerrar un proceso, el SO le envia un SIGINT).
Los consumidores tambien se cierran si leen un mensaje con key == PID % 5

Para manejar el SIGINT enviado por ctl+c usamos sigaction()

#include <signal.h>
#include <stdlib.h>

static volatile sig_atomic_t keep_running = 1;



int main(int argc, char *argv[]) {
    struct sigaction act;
    act.sa_handler = intHandler;
    sigaction(SIGINT, &act, NULL);

    while (keepRunning) {
        // main loop
    }
}

-------------------
6. Dejar titulos bonitos.

NOTES
+ https://stackoverflow.com/questions/3738752/opening-a-terminal-from-linux-makefile
